(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{412:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("该篇文章参考 "),s("a",{attrs:{href:"https://xiaolincoding.com/mysql/lock/deadlock.html#%E6%AD%BB%E9%94%81%E7%9A%84%E5%8F%91%E7%94%9F",target:"_blank",rel:"noopener noreferrer"}},[t._v("小林 coding"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("场景如下：有个业务的主要逻辑就是新增订单、修改订单、查询订单等操作；然后因为订单是不能重复的，所以"),s("strong",[t._v("当时在新增订单的时候就需要做一个幂等性校验")]),t._v("，做法就是在新增订单的时候，先通过 "),s("code",[t._v("select ... from ... where ... for update;")]),t._v(" 语句进行查询订单是否存在，如果不存在才插入订单记录。"),s("strong",[t._v("正是因为这样的操作，如果业务量很大的时候，就可能会出现死锁；")])]),t._v(" "),s("p",[t._v("先来建表实验一下：")]),t._v(" "),s("div",{staticClass:"language-SQL line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("t_order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("order_no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("create_date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("datetime")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("index_order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("order_no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USING")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BTREE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("InnoDB")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 插入数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t_order "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.xiaolincoding.com//mysql/other/54fc00f9f87a60ab7b5ba92d824a892d.png",alt:"img"}})]),t._v(" "),s("h2",{attrs:{id:"死锁的发生"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#死锁的发生"}},[t._v("#")]),t._v(" 死锁的发生")]),t._v(" "),s("p",[t._v("我们先来模拟一下死锁："),s("a",{attrs:{href:"https://cdn.xiaolincoding.com//mysql/other/90c1e01d0345de639e3426cea0390e80.png",target:"_blank",rel:"noopener noreferrer"}},[t._v("按照这个图来"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.xiaolincoding.com//mysql/other/90c1e01d0345de639e3426cea0390e80.png",alt:"img"}})]),t._v(" "),s("p",[t._v("但是我的 "),s("code",[t._v("MySQL")]),t._v(" 是设置了死锁检测的哈哈，就没办法演示阻塞的状态了。。。")]),t._v(" "),s("p",[t._v("问题来了，"),s("strong",[t._v("原理上为什么会出现这个死锁呢？")])]),t._v(" "),s("p",[t._v("在看这个文章前，"),s("a",{attrs:{href:"https://mltbjl.github.io/blogs/category1/2018/MySQL%20%E5%A6%82%E4%BD%95%E5%8A%A0%E9%94%81%EF%BC%9F.html#%E5%89%8D%E8%A8%80",target:"_blank",rel:"noopener noreferrer"}},[t._v("我们先需要熟悉 "),s("code",[t._v("MySQL")]),t._v(" 如何对数据进行加锁的"),s("OutboundLink")],1),t._v(" ；")]),t._v(" "),s("p",[t._v("OK，看完文章过后，我们知道，我们进行执行 "),s("code",[t._v("select ... for update")]),t._v(" 语句后，为了避免幻读的问题，我们事务 A 对 (1006, 无穷大] 这个区间加了临键锁，但是无穷大这个数不存在，其实也可以理解为间隙锁；然后我们的事务 B 也同样执行了 "),s("code",[t._v("select ... for update")]),t._v(" 的语句后，对我们的 (1006, 无穷大] 这个区间加了临键锁，但是无穷大这个数不存在，其实也可以理解为间隙锁；")]),t._v(" "),s("p",[s("strong",[t._v("间隙锁之间虽然也有 X 型锁和 S 型锁，但是是兼容的！")])]),t._v(" "),s("p",[t._v("完了之后，我们的事务 A 想往表中进行插入一条记录为 order_no = 1007 的记录会被阻塞；问题就来了："),s("strong",[t._v("为什么会被阻塞呢？")])]),t._v(" "),s("p",[t._v("当我们执行插入语句的时候，"),s("strong",[t._v("会在插入间隙上获取插入意向锁，而插入意向锁与间隙锁之间是冲突的，所以当其他事务持有该间隙的间隙锁时，需要等待其他事务释放间隙锁之后，才能获取到插入意向锁；而间隙锁与间隙锁之间是兼容的，所以所以两个事务中 "),s("code",[t._v("select ... for update")]),t._v(" 语句并不会相互影响。")])]),t._v(" "),s("p",[t._v("所以为什么会发生死锁的原因就是：事务 A 和 事务 B 在执行完  "),s("code",[t._v("select ... for update")]),t._v("  语句后都持有范围为(1006, 无穷大] 的临键锁，而接下来的插入操作是为了获取到插入意向锁，都在等待对方释放这个间隙锁，于是就造成了死锁了。")]),t._v(" "),s("p",[t._v("补充一个知识：为什么间隙锁和间隙锁兼容呢？插入意向锁是什么？")]),t._v(" "),s("p",[s("strong",[t._v("间隙锁的意义在于阻止区间被插入")]),t._v("，因此是可以共存的。但是我们需要知道 临键锁 是包含着 间隙锁+记录锁的；我们如果是 X 型的临键锁，那么就不能共存了，因为还有我们的记录锁嘛~")]),t._v(" "),s("p",[t._v("第二个问题：插入意向锁不是表锁那个意向锁，而是一个特殊的间隙锁，锁住的是一个点；")]),t._v(" "),s("p",[s("strong",[t._v("插入意向锁是一种特殊的间隙锁，但不同于间隙锁的是，该锁只用于并发插入操作")])]),t._v(" "),s("p",[t._v("插入意向锁的生成时机：没插入一条记录，都需要看一下待插入记录的下一条记录是否加了间隙锁，如果已经加了间隙锁，此时会生成一个插入意向锁，"),s("strong",[t._v("然后锁的状态设置为 等待状态，只有锁的状态设置为 正常状态才算是该事务获取到该锁；")])]),t._v(" "),s("h2",{attrs:{id:"如何避免死锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何避免死锁"}},[t._v("#")]),t._v(" 如何避免死锁")]),t._v(" "),s("p",[t._v("在数据库层面：我们有两种策略通过【打破循环等待条件】来解除死锁：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("设置事务等待锁的超时时间。设置 "),s("code",[t._v("innodb_lock_wait_timeout")]),t._v(" 这个参数即可，当发生超时后，就会出现下面的提示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.xiaolincoding.com//mysql/other/c296c1889f0101d335699311b4ef20a8.png",alt:"图片"}})])]),t._v(" "),s("li",[s("p",[t._v("开启主动死锁检测。设置 "),s("code",[t._v("innodb_deadlock_detect")]),t._v(" 这个参数即可；")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.xiaolincoding.com//mysql/other/f380ef357d065498d8d54ad07f145e09.png",alt:"图片"}})])])]),t._v(" "),s("p",[t._v("当然我们回归上面这个案例来避免死锁的发生；")]),t._v(" "),s("p",[t._v("我们可以回归业务的角度来预防死锁，对订单校验的目的是为了不会出现重复的订单，那我们可以直接将 "),s("code",[t._v("order_no")]),t._v(" 字段设置成唯一索引列，利用它的唯一性就可以保证这个订单不会出现重复了，我们也不需要去 "),s("code",[t._v("select")]),t._v(" 是否出现该订单；不过有一点不好的地方就是在我们插入一个已经存在的订单记录时就会抛出异常。")])])}),[],!1,null,null,null);s.default=e.exports}}]);