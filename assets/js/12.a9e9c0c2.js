(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{404:function(s,a,t){"use strict";t.r(a);var n=t(2),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("本文参考 "),a("a",{attrs:{href:"https://juejin.cn/post/7046935402791305224#heading-45",target:"_blank",rel:"noopener noreferrer"}},[s._v("三分恶"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"内存管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[s._v("#")]),s._v(" 内存管理")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("运行时区域：一些概念还是要了解的")]),s._v(" "),a("p",[s._v("程序计数器："),a("code",[s._v("pc")]),s._v(" 寄存器，其实也是一块缓存，就是存储当前线程执行到哪一个步骤")]),s._v(" "),a("p",[a("code",[s._v("Java")]),s._v(" 虚拟机栈：方法调用的时候，"),a("strong",[s._v("会创建栈帧，用来存储局部变量表，引用变量，操作数栈等")]),s._v(" "),a("strong",[s._v("Java 中的普通方法的调用都是通过栈来实现的；方法调用的数据需要通过栈进行传递，每一次方法调用都会有一个对应的栈帧被压入栈中，每一个方法结束后，就会有一个栈帧被弹出。")])]),s._v(" "),a("p",[s._v("堆：")]),s._v(" "),a("p",[s._v("方法区：存储虚拟机"),a("strong",[s._v("已经加载")]),s._v("的"),a("strong",[s._v("类的类型信息、常量、静态变量等")])])]),s._v(" "),a("li",[a("p",[s._v("对象创建过程")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/664dc2caf19f4bf7a6d6a1e606cd3d46~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",target:"_blank",rel:"noopener noreferrer"}},[s._v("图片"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("首先检查类是否被加载过 --- 然后给对象分配内存 --- 然后初始化对象设置为 0 值（除了对象头） --- 给对象头进行初始化 --- 执行 "),a("code",[s._v("init()")]),s._v(" 方法")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("JVM")]),s._v(" 里 "),a("code",[s._v("new")]),s._v(" 对象时，堆会发生抢占吗？"),a("code",[s._v("JVM")]),s._v(" 是怎么设计来保证线程安全的？")]),s._v(" "),a("p",[s._v("会发生堆抢占")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/11414b9e10ed40d3a2c7519c2af8014f~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",target:"_blank",rel:"noopener noreferrer"}},[s._v("图片"),a("OutboundLink")],1)]),s._v(" "),a("ol",[a("li",[s._v("通过 "),a("code",[s._v("CAS")]),s._v(" 分配重试的方式来保证这个操作的原子性")]),s._v(" "),a("li",[s._v("每个线程在 "),a("code",[s._v("Java")]),s._v(" 堆中预先分配一小块内存，也就是本地线程分配缓冲（"),a("code",[s._v("TLAB")]),s._v("），要分配内存的线程，先在本地缓冲区进行分配，只有本地缓冲区用完了，分配新的缓冲区才需要同步锁定；")])])]),s._v(" "),a("li",[a("p",[s._v("内存泄漏和内存溢出")]),s._v(" "),a("p",[s._v("内存泄漏：【占着茅坑不拉屎】，就是该对象已经不被使用了，但是没有被垃圾回收器清除")]),s._v(" "),a("p",[s._v("内存溢出：内存大小是有限的，当我们的内存达到限度之后就会出现这个问题；【堆内存溢出和栈内存溢出】")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("堆内存溢出：只要不断创建不可被回收的对象，比如静态变量，随着对象数量增多，就会超出堆内存产生堆内存溢出。")]),s._v(" "),a("div",{staticClass:"language-Java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * VM参数： -Xms20m -Xmx20m -XX:+HeapDumpOnOutOfMemoryError\n */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapOOM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OOMObject")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OOMObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OOMObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OOMObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("栈内存溢出：栈内存是固定大小的，我们不断去创建线程，然后该线程去调用方法；因为 OS 给每个进程分配的内存有限，所以也会导致这个栈内存溢出")]),s._v(" "),a("div",{staticClass:"language-Java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * vm参数：-Xss2M\n */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JavaVMStackOOM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dontStop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stackLeakByThread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" thread "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dontStop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            thread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Throwable")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JavaVMStackOOM")]),s._v(" oom "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JavaVMStackOOM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        oom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stackLeakByThread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("内存泄漏有哪些原因导致？")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1a4bde55b6344197a7fce575f8da1310~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",target:"_blank",rel:"noopener noreferrer"}},[s._v("图片"),a("OutboundLink")],1)]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("静态集合")]),s._v("的生命周期和 JVM 一致，所以静态集合引用的对象不能被释放")])]),s._v(" "),a("div",{staticClass:"language-Java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OOM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),s._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("oomTests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n   list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[s._v("单例模式")])]),s._v(" "),a("li",[a("p",[s._v("数据连接、IO、Socket 等连接没有及时释放，即没有 "),a("code",[s._v(".close()")])])]),s._v(" "),a("li",[a("p",[s._v("变量不合理的作用域")]),s._v(" "),a("p",[s._v("一个变量的定义作用域大于其使用范围，很可能存在内存泄漏；或不再使用对象没有及时将对象设置为 null，很可能导致内存泄漏的发生")]),s._v(" "),a("div",{staticClass:"language-Java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Simple")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("method1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        object "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...其他代码")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//由于作用域原因，method1执行完成之后，object 对象所分配的内存不会马上释放")]),s._v("\n        object "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("Hash 值发生改变")]),s._v(" "),a("p",[s._v("对象 Hash 值的改变，使用 "),a("code",[s._v("HashMap")]),s._v("、"),a("code",[s._v("HashSet")]),s._v("等容器的时候，由于对象修改之后的 Hash 值和存储进容器时的 Hash 值不一样，导致找不到存储的对象，自然无法单独删除了；这也是为什么 String 为什么是 final 修饰不可变的原因；")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("ThreadLocal")]),s._v(" 的弱引用导致内存泄漏。")])])])])])]),s._v(" "),a("li",[a("p",[s._v("如何判断对象存活？")]),s._v(" "),a("p",[s._v("直接计数；")]),s._v(" "),a("p",[s._v("可达性分析算法：引用链")]),s._v(" "),a("p",[a("code",[s._v("GC Root")]),s._v(" 有哪些：四种对象①方法区中类静态属性引用的对象；②方法区中常量引用的对象；③虚拟机栈（栈帧中本地变量表）中引用的对象；④调用了本地方法（"),a("code",[s._v("Native")]),s._v("）的对象")])]),s._v(" "),a("li",[a("p",[s._v("对象引用有哪几种？")]),s._v(" "),a("p",[s._v("强弱软虚")]),s._v(" "),a("p",[s._v("这里了解一下虚引用就好：虚引用不会得到我们的对象实例，为一个对象设置虚引用关联的唯一目的是为了能在这个对象被收集器回收时收到一个系统通知。跟踪对象被垃圾回收的活动。")])]),s._v(" "),a("li",[a("p",[s._v("Java 堆的内存分区")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fb040809e1ba44bd87e162a077c67071~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",target:"_blank",rel:"noopener noreferrer"}},[s._v("图片"),a("OutboundLink")],1),s._v("\n为什么要有 Survivor 区？有 Eden 区不就够了吗？")]),s._v(" "),a("ol",[a("li",[s._v("老年代对象的回收：Survivor 区中的对象经过多次垃圾回收仍然存活的对象会被晋升到老年区；如果没有 Survivor 区，那么所有的对象都只能在 Eden 区晋升在老年区，会导致老年代的对象增加，触发老年代的垃圾回收很消耗性能；")]),s._v(" "),a("li",[s._v("分代垃圾回收算法：Survivor 区是分代垃圾回收算法的一部分，通过将新生代分为 Eden 区和 Survivor 区，可以根据对象的存活情况在两个 Survivor 区之间进行对象的复制和清理，实现高效地垃圾回收。")])])]),s._v(" "),a("li",[a("p",[s._v("垃圾回收算法")]),s._v(" "),a("p",[s._v("标记 --- 清除")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/03b61cb79d6046d68b2593a554b3f498~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",target:"_blank",rel:"noopener noreferrer"}},[s._v("图片"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("缺点：主要是 ①内存碎片化的问题；②如果 "),a("code",[s._v("Java")]),s._v(" 堆中含大量对象，而其中大部分需要回收的，这时必须进行大量标记和清除的动作，效率很低；")]),s._v(" "),a("p",[s._v("标记 --- 复制")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3cbb24d0d1ca4f9694cc334f261cea69~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",target:"_blank",rel:"noopener noreferrer"}},[s._v("图片"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("该算法解决了 垃圾清除算法面对大量的可回收对象时执行效率的问题；")]),s._v(" "),a("p",[s._v("缺点：空间利用率不大，每次都是利用一半。")]),s._v(" "),a("p",[a("strong",[s._v("新生代就是用这个算法的，因为新生代存活少，每次只需要复制少量的对象即可；")])]),s._v(" "),a("p",[s._v("标记 --- 整理")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c4fe36a9d71c4b039887cea8f5defff3~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",target:"_blank",rel:"noopener noreferrer"}},[s._v("图片"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("主要用于老年代，因为对象移动是很需要 进行 "),a("code",[s._v("STW")]),s._v(" 操作，从吞吐量来考虑，老年代就需要使用 标记 --- 整理算法更合适。")])]),s._v(" "),a("li",[a("p",[s._v("Minor GC(Young GC)、Major(Old GC)、Mixed GC、Full GC")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("部分回收")]),s._v(" "),a("p",[s._v("Minor GC：新生代的垃圾回收")]),s._v(" "),a("p",[s._v("Major GC：老年代的垃圾回收")])]),s._v(" "),a("li",[a("p",[s._v("整集回收")]),s._v(" "),a("p",[s._v("Full GC： 收集整个 "),a("code",[s._v("Java")]),s._v(" 堆和方法区的垃圾回收")])])]),s._v(" "),a("p",[s._v("Young GC触发的时机是：我们的 "),a("code",[s._v("Eden")]),s._v(" 区没有足够的空间的时候就需要出发这个 Young GC 回收了。")]),s._v(" "),a("p",[s._v("Full GC 触发时机：总的来说，都是因为各种"),a("strong",[s._v("预操作导致老年代空间不足")]),s._v("，或者说是"),a("strong",[s._v("老年代空间就是不足")]),s._v("导致的 或者是 "),a("code",[s._v("System.gc()")]),s._v(" "),a("code",[s._v("jmap - dump")]),s._v(" 等命令会触发 full gc")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fb0adf855d3247d9b231bb5dffe66658~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",target:"_blank",rel:"noopener noreferrer"}},[s._v("图片"),a("OutboundLink")],1)])]),s._v(" "),a("li",[a("p",[s._v("对象什么时候进入老年区")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/71eed2e143d8459fb4b055878e8064e5~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",target:"_blank",rel:"noopener noreferrer"}},[s._v("图片"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("GC很多次都还存活的对象；大对象直接进入老年区（数组、长字符串）；空间分配担保（假如 Young GC 之后，新生代还有大量对象存活就需要老年代进行空间分配担保，把 "),a("code",[s._v("Survivor")]),s._v(" 无法容纳得对象直接送入老年区）")])]),s._v(" "),a("li",[a("p",[s._v("什么是 "),a("code",[s._v("STW")]),s._v("?什么是安全点？")]),s._v(" "),a("p",[s._v("进行垃圾回收过程中，会涉及到对象的移动；为了保证对象引用更新的正确性，必须要暂停用户线程。像这样的停顿就是所谓的 "),a("code",[s._v("STW")]),s._v(" ；")]),s._v(" "),a("p",[s._v("那我们暂停线程是在任意时候都可以暂停线程吗？不是的，我们只能在一个叫做【安全点】的位置进行暂停线程，这些安全点的位置可以在：①循环的末尾；②方法返回前，或者是调用方法的 "),a("code",[s._v("call")]),s._v(" 指令后；③可能抛出异常的位置。")])]),s._v(" "),a("li",[a("p",[s._v("垃圾回收器")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/82e051ec49ee4b208cc4f60b250fdc09~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",target:"_blank",rel:"noopener noreferrer"}},[s._v("图片"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("这里需要重点了解 "),a("code",[s._v("CMS")]),s._v(" 以及 "),a("code",[s._v("G1")]),s._v("，还有了解一下我们虚拟机中默认的 "),a("code",[s._v("Parallel Scavenge")]),s._v(" 和 "),a("code",[s._v("Parallel Old")])]),s._v(" "),a("p",[s._v("先从 Parallel Scavenge 说起，这个收集器是"),a("strong",[s._v("新生代收集器")]),s._v("，基于 "),a("strong",[s._v("标记 --- 复制")]),s._v(" 算法实现的；")]),s._v(" "),a("p",[s._v("然后 Parallel Old 说起，这个收集器是"),a("strong",[s._v("老年代收集器")]),s._v("，基于 "),a("strong",[s._v("标记 --- 整理")]),s._v(" 算法实现的；")]),s._v(" "),a("p",[s._v("CMS 也是一款"),a("strong",[s._v("老年代收集器")]),s._v("，基于 "),a("strong",[s._v("标记 --- 清除")]),s._v(" 算法实现的；它是一种以"),a("strong",[s._v("获取最短回收停顿时间为目标")]),s._v("的收集器。")]),s._v(" "),a("p",[s._v("G1 是以局部收集的思想和基于 "),a("code",[s._v("Region")]),s._v(" 的内存布局形式；")])]),s._v(" "),a("li",[a("p",[s._v("详细唠嗑一下 CMS 和 G1")]),s._v(" "),a("p",[s._v("CMS 的工作流程：（Concurrent Mark Sweep）")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/73b67b70a21147e5a900ed20b0b8e929~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",target:"_blank",rel:"noopener noreferrer"}},[s._v("图片"),a("OutboundLink")],1)]),s._v(" "),a("ul",[a("li",[s._v("初始标记：单线程执行，需要 "),a("code",[s._v("STW")]),s._v("，标记 "),a("code",[s._v("GC Roots")]),s._v(" 能直达的对象；")]),s._v(" "),a("li",[s._v("并发标记：无停顿，和用户线程同时进行，从 "),a("code",[s._v("GC Roots")]),s._v(" 直达对象开始遍历整个对象图，这个阶段结束后，不一定记录了所有的可达对象，因为用户线程会更新节点的引用，所以无法保证可达性分析的实时性，所以这个步骤还会标记更新节点引用的地方；")]),s._v(" "),a("li",[s._v("重新标记：多线程运行，需要 "),a("code",[s._v("STW")]),s._v("，并发标记阶段产生对象")]),s._v(" "),a("li",[s._v("并发清除：无停顿，和用户线程同时运行，清除掉标记阶段标记的死亡的对象")])]),s._v(" "),a("p",[s._v("G1：（Garbage First）")]),s._v(" "),a("p",[s._v("特点：G1 把连续的 "),a("code",[s._v("Java")]),s._v(" 堆划分为多个大小相等的独立区域（"),a("code",[s._v("Region")]),s._v("），每个 "),a("code",[s._v("Region")]),s._v(" 都可以根据需要，扮演新生代的 "),a("code",[s._v("Eden")]),s._v(" 空间、"),a("code",[s._v("Survivor")]),s._v(" 空间、或者老年代空间。")]),s._v(" "),a("p",[s._v("这样就避免了回收整个堆，而是按照若干个 "),a("code",[s._v("Region")]),s._v(" 集进行收集，同时维护一个优先列表，跟踪各个 "),a("code",[s._v("Region")]),s._v(" 回收的价值，优先回收价值高的 "),a("code",[s._v("Region")])]),s._v(" "),a("p",[s._v("回收过程跟我们的 "),a("code",[s._v("CMS")]),s._v(" 差不多 "),a("a",{attrs:{href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/01d323f5762e4ab9b60deb26c628eadb~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",target:"_blank",rel:"noopener noreferrer"}},[s._v("图片"),a("OutboundLink")],1)])]),s._v(" "),a("li",[a("p",[s._v("有了 CMS，为什么还需要 G1")]),s._v(" "),a("p",[s._v("CMS 优缺点：第一个是这个算法会导致比较多的"),a("strong",[s._v("内存碎片")]),s._v("；第二个就是在"),a("strong",[s._v("并发清除阶段")]),s._v("用户线程依旧执行，有可能产生的"),a("strong",[s._v("浮动垃圾")]),s._v("，本次垃圾清除无法清理，需要等到下一次的垃圾回收才能进行回收；")]),s._v(" "),a("p",[s._v("G1 主要是解决了 CMS 的内存碎片的问题。")])])]),s._v(" "),a("h2",{attrs:{id:"jvm-调优了解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm-调优了解"}},[s._v("#")]),s._v(" JVM 调优了解")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("线上服务 CPU 占用过高如何排查？")]),s._v(" "),a("p",[s._v("问题分析：CPU 占用过高的原因就是因为某个应用程序长期占用了 CPU 的资源")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/494f4b5e6c894f67a34a8727e9e446ec~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",target:"_blank",rel:"noopener noreferrer"}},[s._v("图片"),a("OutboundLink")],1)]),s._v(" "),a("ol",[a("li",[a("p",[s._v("先找出哪个进程占用 CPU 高")]),s._v(" "),a("p",[s._v("TOP 命令查看系统各个进程的资源占用情况")])]),s._v(" "),a("li",[a("p",[s._v("然后根据找到对应进行进程里哪个线程占用 CPU 高")]),s._v(" "),a("p",[s._v("TOP -Hp 进程ID 列出对应进程里的线程占用资源的情况")])]),s._v(" "),a("li",[a("p",[s._v("找到对应线程 ID 后，再打印对应线程的堆栈信息")]),s._v(" "),a("p",[s._v('printf "%x\\n" PID 把线程ID转换为16进制')]),s._v(" "),a("p",[s._v("jstack PID 打印出进程的所有线程信息，从打印出来的线程信息中找到上一步转换为16进制的线程ID对应的线程信息。")])]),s._v(" "),a("li",[a("p",[s._v("最后根据线程的堆栈信息定位到具体的业务逻辑代码找到问题所在。")])])])]),s._v(" "),a("li",[a("p",[s._v("内存飙高的问题如何排查？")]),s._v(" "),a("p",[s._v("问题分析：内存飙高如果是发生在Java进程上，一般是因为大量对象被创建导致的，持续飙高的原因是垃圾回收跟不上这个对象创建速度，或者内存泄漏导致对象无法回收")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("观察垃圾回收的情况")]),s._v(" "),a("p",[s._v("查看 GC 次数")]),s._v(" "),a("p",[s._v("查看堆内存中占用空间最大的前几十个对象")]),s._v(" "),a("p",[s._v("如果每次 GC 次数正常，而且回收的内存空间也正常，则就是因为对象创建速度快导致内存一致占用很高；如果每次回收的内存少，那么很可能因为内存泄漏而导致内存一致没有被回收。")])])])]),s._v(" "),a("li",[a("p",[s._v("频繁 Full GC 怎么办")])]),s._v(" "),a("li",[a("p",[s._v("有没有处理过内存泄漏的问题")])])]),s._v(" "),a("h2",{attrs:{id:"虚拟机执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机执行"}},[s._v("#")]),s._v(" 虚拟机执行")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("类的生命周期")]),s._v(" "),a("p",[s._v("加载类的字节码文件 --- 连接（验证、准备、解析）--- 初始化 --- 使用 --- 卸载")])]),s._v(" "),a("li",[a("p",[s._v("类加载过程")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6b3e28f01cb846fd96bde3b514cd1b62~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",target:"_blank",rel:"noopener noreferrer"}},[s._v("图片"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("三部分：")]),s._v(" "),a("ol",[a("li",[s._v("通过这个类的全限类名来获取定义此类的二进制字节流；")]),s._v(" "),a("li",[s._v("通过该字节流所代表的静态存储结构转换为方法区中运行时的数据结构；")]),s._v(" "),a("li",[s._v("在内存中生成该类的 "),a("code",[s._v("java.lang.Class")]),s._v(" 对象，作为方法区这个类的各种数据的访问入口。")])])]),s._v(" "),a("li",[a("p",[s._v("类加载器")]),s._v(" "),a("p",[s._v("四个：")]),s._v(" "),a("p",[s._v("启动类加载器（"),a("code",[s._v("BootStrap ClassLoader")]),s._v("）：加载 "),a("code",[s._v("Java")]),s._v(" 的核心库")]),s._v(" "),a("p",[s._v("扩展类加载器（"),a("code",[s._v("Extension ClassLoader")]),s._v("）：加载 "),a("code",[s._v("Java")]),s._v(" 的扩展库")]),s._v(" "),a("p",[s._v("应用程序类加载器（"),a("code",[s._v("Application ClassLoader")]),s._v("）：根据 "),a("code",[s._v("Java")]),s._v(" 应用的类路径（"),a("code",[s._v("ClassPath")]),s._v("）加载类，可以通过 "),a("code",[s._v("ClassLoader.getSystemClassLoader()")]),s._v(" 来获取")]),s._v(" "),a("p",[s._v("自定义类加载器")])]),s._v(" "),a("li",[a("p",[s._v("什么是双亲委派机制？")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c832b9928f414c64891671d46590c0fa~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",target:"_blank",rel:"noopener noreferrer"}},[s._v("图片"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("当我们进行加载一个类的时候，我们的类加载器不会主动尝试进行类加载，而是让其父类加载器进行加载，如果父类加载器不能加载，我们的子类加载器才会对这个类进行加载。")])]),s._v(" "),a("li",[a("p",[s._v("为什么要用双亲委派机制？")]),s._v(" "),a("p",[s._v("保证类不被重复加载 以及 保证程序稳定运行")]),s._v(" "),a("p",[s._v("例如类 "),a("code",[s._v("java.lang.Object")]),s._v("，它存在 "),a("code",[s._v("rt.jar")]),s._v(" 下，通过双亲委派机制，保证最终都是委派给处于模型最高端的启动类加载器进行加载，保证了 "),a("code",[s._v("Object")]),s._v(" 一致；")]),s._v(" "),a("p",[s._v("反之，如果都由各个类加载器自行加载的话，如果用户自己也编写了一个名为 "),a("code",[s._v("java.lang.Object")]),s._v(" 的类，并放在 "),a("code",[s._v("ClassPath")]),s._v(" 中，那系统就出现不同的 "),a("code",[s._v("Object")]),s._v(" 了。")])]),s._v(" "),a("li",[a("p",[s._v("如何破坏双亲委派机制？（不能说破坏）")]),s._v(" "),a("p",[s._v("双亲委派中默认有三个类加载器，最顶层的 "),a("code",[s._v("BootStrapClassLoader")]),s._v(" 启动类加载器只负责加载 "),a("code",[s._v("Javahome lib")]),s._v(" 下面的 "),a("code",[s._v("jar")]),s._v(" 包，虚拟机决定的，想要打破就要重写 "),a("code",[s._v("classLoader()")]),s._v(" 方法，修改这个类加载器的【活动范围】；但是真正的打破双亲委派的意义在于：如果是一个第三方的或者不在 "),a("code",[s._v("classPath")]),s._v(" 下面的任意 "),a("code",[s._v("jar")]),s._v(" 包，如何加载？只有你需要去加载一个不按套路出牌或者说你运行时需要新输入的类，这才需要打破双亲委派。")]),s._v(" "),a("p",[s._v("延申出来一个问题："),a("code",[s._v("Tomcat")]),s._v(" 打破双亲委派了嘛？没有，因为 "),a("code",[s._v("Tomcat")]),s._v(" 是一个 "),a("code",[s._v("web")]),s._v(" 容器，需要用部署很多应用程序，所以就可以带来不同程序依赖第三方库的不同版本的问题，但是不同版本的类库中某一个类的全路径名可能是一样的，比如说：如多个应用都要依赖 "),a("code",[s._v("hollis.jar")]),s._v("，但是A应用需要依赖1.0.0版本，但是B应用需要依赖1.0.1版本。这两个版本中都有一个类是 "),a("code",[s._v("com.hollis.Test.class")]),s._v("。如果采用默认的双亲委派类加载机制，那么无法加载多个相同的类。"),a("code",[s._v("Tomcat")]),s._v(" 还是依旧按照我们的类加载器进行启动的，只不过自己延申了自定义的类加载器 "),a("code",[s._v("Common")]),s._v(" 类加载 &  "),a("code",[s._v("Shared")]),s._v(" 类加载器 & "),a("code",[s._v("Catalina")]),s._v(" & 类加载器 & "),a("code",[s._v("WebApp")]),s._v(" 类加载器。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8324c4dc1427450b834b4980301c68ab~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",target:"_blank",rel:"noopener noreferrer"}},[s._v("图片"),a("OutboundLink")],1)])])])])}),[],!1,null,null,null);a.default=e.exports}}]);