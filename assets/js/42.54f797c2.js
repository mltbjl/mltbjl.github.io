(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{432:function(t,e,a){"use strict";a.r(e);var n=a(2),v=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"问题1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题1"}},[t._v("#")]),t._v(" 问题1")]),t._v(" "),e("ul",[e("li",[t._v("交给Spring管理的Bean对象，一定是我们用类创建出来的Bean嘛？")])]),t._v(" "),e("p",[t._v("不一定，可以是反向代理对象产生的Bean。")]),t._v(" "),e("ul",[e("li",[t._v("创建出来的Bean就永远是单例的吗，有可能是原型模式嘛？")])]),t._v(" "),e("p",[t._v("有的")]),t._v(" "),e("h2",{attrs:{id:"细节补充"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#细节补充"}},[t._v("#")]),t._v(" 细节补充")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Spring有哪几种作用域：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://img-blog.csdnimg.cn/3b3768dd64d946cd9cfb08cab380fc66.png",alt:"img"}})])]),t._v(" "),e("li",[e("p",[t._v("Spring 中在哪里实现了这个作用域的判断？")]),t._v(" "),e("p",[t._v("在"),e("code",[t._v("AbstractAutowireCapableBeanFactory")]),t._v("类中的"),e("code",[t._v("creatBean()")]),t._v("方法中，在创建和修改对象的时候判断单例还是原型。具体的方法体现是 "),e("code",[t._v("beanDefiniton.isSingleton()")]),t._v(" 方法。假如是单例Bean就会存在单例池中，否则直接返回。")])]),t._v(" "),e("li",[e("p",[t._v("补充：什么是单例对象，什么是原型对象？")]),t._v(" "),e("p",[t._v("singleton：每次从spring获取的都是同一个地址的对象 ——> 所以可以说都是一个实例对象。")]),t._v(" "),e("p",[t._v("prototype：每次从spring获取的都是不同地址的对象 ——> 所以每次获取都是新的一个对象。")])]),t._v(" "),e("li",[e("p",[t._v("Factory作用：创建AOP代理对象。")])]),t._v(" "),e("li",[e("p",[t._v("Factory实现原理：")]),t._v(" "),e("p",[t._v("这里结合网上文章进行补充：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://img-blog.csdnimg.cn/8a64fd92174341cb999b507231736cdd.png",alt:"img"}})])])]),t._v(" "),e("p",[t._v("该图是根据腾讯云 "),e("a",{attrs:{href:"https://cloud.tencent.com/developer/user/1345101",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java帮帮"),e("OutboundLink")],1),t._v(" 的讲解进行整理的图")]),t._v(" "),e("p",[t._v("总结：")]),t._v(" "),e("ol",[e("li",[t._v("FactoryBean是一个Bean，但不仅仅是一个Bean。他能生产或者修饰对象生成的工厂Bean。它能在需要的时候生产一个对象，也可以返回任何Bean的实例。")]),t._v(" "),e("li",[t._v("一个Bean如果实现了FactoryBean接口，那么根据Bean的名称获取到的实际上是getObject()返回的对象，而不是该Bean的本身，如果想要获取这个Bean自身的实例，就需要在这个Bean的名称上加上 ‘ & ’符号。")])])])}),[],!1,null,null,null);e.default=v.exports}}]);